<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ include file="MultipleOutputHelper.ttinclude" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #><# var manager = Manager.Create(Host, GenerationEnvironment); #>
<#
    string[] tables = new string[]{ "Demo" };//Put name of your tables to create repositories for them
    string reponamespace = "Service";
    string connectionNameStringConfigName = "ServiceConnection";
    bool generateModels = false;
    foreach (var table in tables)
    {
        manager.StartNewFile(table+"Service.cs");
#>
namespace <#= reponamespace #>
{
    public partial interface I<#= table #>Repository : Common.IRepository
    {
    }

    public partial class <#= table #>Repository : Common.Repository, I<#= table #>Repository
    {
        public <#= table #>Repository()
            : base("<#= table #>", "<#= connectionNameStringConfigName #>")
        {
        }
    }
}
<#
        manager.EndBlock();
    }
    manager.Process(true);
#>